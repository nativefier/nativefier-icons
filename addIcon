#!/bin/sh

# Will automatically convert and add the output properly to gitCloud

# USAGE
# ./addIcon <input png or svg>

# Example
# ./addIcon ~/Desktop/facebook.png

## Dependencies
# imagemagick, svg2png

set -e

function missing_svg2png() {
    echo >&2 "$1
Please install from https://github.com/domenic/svg2png or using:

    npm install -g svg2png
"
}

# Exec Paths
type convert >/dev/null 2>&1 || { echo >&2 "Cannot find required ImageMagick Convert executable"; exit 1; }
type identify >/dev/null 2>&1 || { echo >&2 "Cannot find required ImageMagick Identify executable"; exit 1; }
type svg2png >/dev/null 2>&1 || { missing_svg2png "Cannot find required svg2png executable"; exit 1; }

# Check correct svg2png
svg2pgn_type=$(svg2png --help | head -n 1)
svg2pgn_version=$(svg2png --version)
svg2pgn_location=$(which svg2png)

if [ "$svg2pgn_type" != "Converts SVGs to PNGs, using PhantomJS" ]; then
    missing_svg2png "Incorrect version of svn2png (v$svg2pgn_version installed in $svg2pgn_location)."
    exit 1
fi

CONVERT_TO_ICNS="${BASH_SOURCE%/*}/bin/convertToIcns"
CONVERT_TO_ICO="${BASH_SOURCE%/*}/bin/convertToIco"

TEMP_DIR="convert_temp_hello"

function cleanUp() {
    rm -rf "${TEMP_DIR}"
}

trap cleanUp EXIT

mkdir -p "${TEMP_DIR}"

SOURCE=$1

if [ -z "${SOURCE}" ]; then
	echo "No source image specified"
	exit 1
fi

NAME=$(basename "${SOURCE}")
EXT="${NAME##*.}"
BASE="${NAME%.*}"

if [ "${EXT}" == "svg" ]; then
    svg2png "${SOURCE}" "--output=${TEMP_DIR}/${BASE}.png" "--width=1024" "--height=1024"
    SOURCE="${TEMP_DIR}/${BASE}.png"
fi

NAME=$(basename "${SOURCE}")
EXT="${NAME##*.}"

if [ "${EXT}" != "png" ]; then
    echo ".png or .svg must be provided"
    exit 1
fi

# Force exit 0 for cp so that if files are identical the script will still proceed to overwrite
cp "${SOURCE}" "files/${BASE}.png" || :
${CONVERT_TO_ICNS} "${SOURCE}" "files/${BASE}.icns"
${CONVERT_TO_ICO} "${SOURCE}" "files/${BASE}.ico"

## append to .gitCloud.yml
echo "- name: ${BASE}" >> _data/gitCloud.yml
echo "  href: files/${BASE}.png" >> _data/gitCloud.yml
echo "- name: ${BASE}" >> _data/gitCloud.yml
echo "  href: files/${BASE}.ico" >> _data/gitCloud.yml
echo "- name: ${BASE}" >> _data/gitCloud.yml
echo "  href: files/${BASE}.icns" >> _data/gitCloud.yml

trap - EXIT
cleanUp
