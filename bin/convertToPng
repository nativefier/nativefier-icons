#!/bin/sh

# USAGE
# =====
# ./convertToPng <input.svg or input.png or input.ico> <output.png> <square edge size (optional, defaults to 1024 px)>
# Example:
# ./convertToPng ~/icon.png ~/Desktop/icon_converted.png 512

# Exit the shell script on error immediately
set -e

# Check for dependencies
if [ "${SOURCE_EXT}" == "png" ]; then
  # imagemagick
  type identify >/dev/null 2>&1 || { echo >&2 "Cannot find required ImageMagick Identify executable"; exit 1; }
  type convert >/dev/null 2>&1 || { echo >&2 "Cannot find required ImageMagick Convert executable"; exit 1; }
elif [ "${SOURCE_EXT}" == "svg" ]; then
  # CairoSVG
  type cairosvg >/dev/null 2>&1 || { echo >&2 "Cannot find required CairoSVG executable"; exit 1; }
fi

# Arguments
SOURCE=$1
DEST=$2
SIZE=$3

# Check arguments
if [ -z "${SOURCE}" ]; then
	echo "No source image specified"
	exit 1
fi

if [ -z "${DEST}" ]; then
	echo "No destination specified"
	exit 1
fi

if [ -z "${SIZE}" ]; then
	# Set default size to 1024 px
	SIZE=1024
fi

# File variables
SOURCE_NAME=$(basename "${SOURCE}")
SOURCE_EXT="${SOURCE_NAME##*.}"
SOURCE_BASE="${SOURCE_NAME%.*}"

# Temp directory
TEMP_DIR=".convertToPng"
mkdir -p "${TEMP_DIR}"

# Cleanup
function cleanUp() {
	rm -rf "${TEMP_DIR}"
}
trap cleanUp EXIT

#Â Check for file type
if [ "${SOURCE_EXT}" == "svg" ]; then
	cairosvg "${SOURCE}"  "--output-width=${SIZE}" "--output-height=${SIZE}" "--output=${DEST}"
elif [ "${SOURCE_EXT}" == "png" ] || [ "${SOURCE_EXT}" == "ico" ]; then
	# Check if .ico is a sequence
	# Pipe into cat so no exit code is given for grep if no matches are found
	IS_ICO_SET="$(identify ${SOURCE} | grep -e "\w\.ico\[0" | cat )"
	convert "${SOURCE}" -define png:big-depth=16 -define png:color-type=6 -sample "${SIZE}x${SIZE}" "${TEMP_DIR}/${SOURCE_BASE}.png"
	if [ "${IS_ICO_SET}" ]; then
		# Extract the largest (?) image from the set
		cp "${TEMP_DIR}/${SOURCE_BASE}-0.png" "${DEST}"
	else
		cp "${TEMP_DIR}/${SOURCE_BASE}.png" "${DEST}"
	fi
else
	echo "SVG, PNG or ICO must be provided"
	exit 1
fi
